{"version":3,"file":"static/webpack/static/development/pages/generate.js.145d4646f6b6d1550ef6.hot-update.js","sources":["webpack:///./pages/generate.js"],"sourcesContent":["'use strict'\nimport 'antd/dist/antd.css'\nimport '@shopify/polaris/styles.css'\nimport 'isomorphic-unfetch'\nimport { isEmpty } from 'lodash/fp'\n\nimport dynamic from 'next/dynamic'\nconst AppProviderDynamic = dynamic(() =>\n  Promise.resolve(require('@shopify/polaris').AppProvider)\n)\nimport { Page, Select, TextField, Card } from '@shopify/polaris'\n\nconst DynamicAceEditor = dynamic(() => import('../components/aceEditor'), {\n  ssr: false,\n})\nimport { message } from 'antd'\n\nimport { Row, Col } from 'antd'\n\nconst options = [\n  { label: 'POST', value: 'post' },\n  { label: 'GET', value: 'get' },\n  { label: 'PUT', value: 'put' },\n]\n\nimport { parseCookies } from 'nookies'\nimport Router from 'next/router'\n\nexport default class Mocker extends React.Component {\n\n  static async getInitialProps(ctx) {\n   const cookie =  parseCookies(ctx)\n\n   if(!cookie.__token){\n     if(!process.browser) return ctx.res.redirect(\"/users\")\n     return Router.push(\"/users\")\n   }\n\n   return {}\n  }\n  \n  state = {\n    body: '{}',\n    endpoint: '',\n    method: 'get',\n    status: 200,\n    output: `\n  {\n   endpoint:  http://localhost:5000,\n   method: get,\n   statusCode: 200,\n    body: {}\n  }\n  `,\n  }\n\n  handleChange = async (newValue) => {\n    await this.setState({ method: newValue })\n    this.changeRender()\n  }\n\n  changeRender = () => {\n    const output = `\n  {\n    endpoint:  http://localhost:5000/${this.state.endpoint},\n    method: ${this.state.method},\n    statusCode: ${this.state.status} ,\n    body: ${this.state.body}\n   }\n  `\n\n    this.setState({ output })\n  }\n\n\n  saveRequest = async ()=>{\n    const { output, ...rest } = this.state\n    console.log(rest)\n    const loader = message.loading(\"saving request\")\n    const body = {\n      ...rest\n    }\n\n    try {\n      await fetch(\"/requests\", {\n        method: \"POST\",\n        body: JSON.stringify(rest),\n        headers: {\n          'Content-Type': 'application/json',\n          \"X-MOCKERY-TOKEN\": parseCookies(null).__token\n         }\n      }).then(res=> res.json())\n      setTimeout(loader);\n      message.success(\"request saved successfully\")\n    } catch (error) {\n      setTimeout(loader);\n    }\n\n  }\n\n  render() {\n    return (\n      <AppProviderDynamic>\n        <Page fullWidth>\n          <Row>\n            <Col lg={12}>\n              <Card\n                sectioned\n                title=\"Add new mock endpoint\"\n                primaryFooterAction={{ content: 'Add request', \n                disabled: !this.state.body || !this.state.endpoint || !this.state.method || !this.state.status,\n                onAction: ()=> this.saveRequest()\n              \n              }}\n              >\n                <TextField\n                  label=\"Endpoint\"\n                  type=\"text\"\n                  value={this.state.endpoint}\n                  prefix=\"http://localhost:5000/\"\n                  onChange={async text => {\n                    const hText = text\n                      .split(' ')\n                      .join('-')\n                      .toLowerCase()\n                    await this.setState({ endpoint: hText })\n                    this.changeRender()\n                  }}\n                />\n                <p style={{ marginTop: 20 }} />\n                <Select\n                  label=\"Date range\"\n                  options={options}\n                  onChange={this.handleChange}\n                  value={this.state.method}\n                />\n                <p style={{ marginTop: 20 }} />\n                <TextField\n                  label=\"StatusCode\"\n                  type=\"number\"\n                  value={this.state.status}\n                  onChange={async text => {\n                    await this.setState({ status: text })\n                    this.changeRender()\n                  }}\n                />\n                <p style={{ marginTop: 20 }} />\n                Request body\n                <DynamicAceEditor\n                  onChange={async newValue => {\n                    await this.setState({ body: newValue })\n                    this.changeRender()\n                  }}\n                  value={this.state.body}\n                  lan=\"javascript\"\n                  theme=\"github\"\n                />\n              </Card>\n            </Col>\n\n            <Col lg={11} offset={1}>\n              <Card sectioned title=\"Render output\">\n                <DynamicAceEditor\n                  lan=\"markdown\"\n                  height=\"40vh\"\n                  disabled={true}\n                  value={this.state.output}\n                  theme=\"github\"\n                />\n              </Card>\n            </Col>\n          </Row>\n        </Page>\n      </AppProviderDynamic>\n    )\n  }\n}\n"],"mappings":"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","sourceRoot":""}