{"ast":null,"code":"'use strict';\n\nvar _jsxFileName = \"/home/kudobuzzhq/Desktop/CODES/mockery-server/components/aceEditor.js\";\nimport React from \"react\";\nimport brace from 'brace';\nimport 'brace/mode/javascript';\nimport 'brace/mode/markdown';\nimport 'brace/ext/language_tools';\nimport 'brace/theme/github';\nimport AceEditor from 'react-ace';\n\nvar textEditor = function textEditor(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(AceEditor, {\n    readOnly: props.disabled || false,\n    mode: props.lan,\n    theme: props.theme,\n    onChange: props.onChange,\n    value: props.value,\n    name: \"Request_Body\",\n    editorProps: {\n      $blockScrolling: true\n    },\n    fontSize: 18,\n    height: props.height || '40vh',\n    width: \"100%\",\n    setOptions: {\n      enableBasicAutocompletion: false,\n      enableLiveAutocompletion: false,\n      enableSnippets: false,\n      showLineNumbers: true,\n      tabSize: 2\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }));\n};\n\nexport default textEditor;","map":{"version":3,"sources":["/home/kudobuzzhq/Desktop/CODES/mockery-server/components/aceEditor.js"],"names":["brace","AceEditor","textEditor","props","disabled","lan","theme","onChange","value","$blockScrolling","height","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize"],"mappings":"AAAA;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP;AACA,OAAO,qBAAP;AACA,OAAO,0BAAP;AACA,OAAO,oBAAP;AAEA,OAAOC,SAAP,MAAsB,WAAtB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK;AAAA,SACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,QAAQ,EAAEA,KAAK,CAACC,QAAN,IAAkB,KAD9B;AAEE,IAAA,IAAI,EAAED,KAAK,CAACE,GAFd;AAGE,IAAA,KAAK,EAAEF,KAAK,CAACG,KAHf;AAIE,IAAA,QAAQ,EAAEH,KAAK,CAACI,QAJlB;AAKE,IAAA,KAAK,EAAEJ,KAAK,CAACK,KALf;AAME,IAAA,IAAI,EAAC,cANP;AAOE,IAAA,WAAW,EAAE;AACXC,MAAAA,eAAe,EAAE;AADN,KAPf;AAUE,IAAA,QAAQ,EAAE,EAVZ;AAWE,IAAA,MAAM,EAAEN,KAAK,CAACO,MAAN,IAAgB,MAX1B;AAYE,IAAA,KAAK,EAAC,MAZR;AAaE,IAAA,UAAU,EAAE;AACVC,MAAAA,yBAAyB,EAAE,KADjB;AAEVC,MAAAA,wBAAwB,EAAE,KAFhB;AAGVC,MAAAA,cAAc,EAAE,KAHN;AAIVC,MAAAA,eAAe,EAAE,IAJP;AAKVC,MAAAA,OAAO,EAAE;AALC,KAbd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADsB;AAAA,CAAxB;;AA0BA,eAAeb,UAAf","sourcesContent":["'use strict'\nimport brace from 'brace'\nimport 'brace/mode/javascript'\nimport 'brace/mode/markdown'\nimport 'brace/ext/language_tools'\nimport 'brace/theme/github'\n\nimport AceEditor from 'react-ace'\n\nconst textEditor = props => (\n  <div>\n    <AceEditor\n      readOnly={props.disabled || false}\n      mode={props.lan}\n      theme={props.theme}\n      onChange={props.onChange}\n      value={props.value}\n      name=\"Request_Body\"\n      editorProps={{\n        $blockScrolling: true,\n      }}\n      fontSize={18}\n      height={props.height || '40vh'}\n      width=\"100%\"\n      setOptions={{\n        enableBasicAutocompletion: false,\n        enableLiveAutocompletion: false,\n        enableSnippets: false,\n        showLineNumbers: true,\n        tabSize: 2,\n      }}\n    />\n  </div>\n)\n\nexport default textEditor\n"]},"metadata":{},"sourceType":"module"}