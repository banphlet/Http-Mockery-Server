{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar _jsxFileName = \"/home/kudobuzzhq/Desktop/CODES/mockery-server/pages/mocker.js\";\nimport React from \"react\";\nimport 'antd/dist/antd.css';\nimport '@shopify/polaris/styles.css';\nimport dynamic from 'next/dynamic';\nvar AppProviderDynamic = dynamic(function () {\n  return _Promise.resolve(require('@shopify/polaris').AppProvider);\n}, {});\nimport { Page, Select, TextField, Card } from \"@shopify/polaris\";\nvar DynamicAceEditor = dynamic(function () {\n  return import(\"../components/aceEditor\");\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"../components/aceEditor\")];\n    },\n    modules: [\"../components/aceEditor\"]\n  }\n});\n\nvar ReactMarkdown = require('react-markdown');\n\nimport { Row, Col } from \"antd\";\nvar options = [{\n  label: 'POST',\n  value: 'post'\n}, {\n  label: 'GET',\n  value: 'get'\n}, {\n  label: 'PUT',\n  value: 'put'\n}];\n\nvar Mocker =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Mocker, _React$Component);\n\n  function Mocker() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Mocker);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Mocker)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      output: \"\",\n      body: \"\",\n      endpoint: \"\",\n      method: \"get\",\n      status: 200\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (newValue) {\n      console.log(newValue);\n\n      _this.setState({\n        method: newValue\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Mocker, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(AppProviderDynamic, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Page, {\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Card, {\n        sectioned: true,\n        title: \"Add new mock endpoint\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Endpoint\",\n        type: \"text\",\n        prefix: \"window.location.href\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        style: {\n          marginTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(Select, {\n        label: \"Date range\",\n        options: options,\n        onChange: this.handleChange,\n        value: this.state.method,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        style: {\n          marginTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        label: \"StatusCode\",\n        type: \"number\",\n        value: this.state.status,\n        onChange: function onChange(text) {\n          return _this2.setState({\n            status: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        style: {\n          marginTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(DynamicAceEditor, {\n        lan: \"javascript\",\n        theme: \"github\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        lg: 11,\n        offset: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Card, {\n        sectioned: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(ReactMarkdown, {\n        source: this.state.output,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return Mocker;\n}(React.Component);\n\nexport { Mocker as default };","map":{"version":3,"sources":["/home/kudobuzzhq/Desktop/CODES/mockery-server/pages/mocker.js"],"names":["dynamic","AppProviderDynamic","resolve","require","AppProvider","Page","Select","TextField","Card","DynamicAceEditor","ssr","ReactMarkdown","Row","Col","options","label","value","Mocker","output","body","endpoint","method","status","newValue","console","log","setState","marginTop","handleChange","state","text","React","Component"],"mappings":"AAAA;;;;;;;;;;;;AACA,OAAO,oBAAP;AACA,OAAO,6BAAP;AACA,OAAOA,OAAP,MAAoB,cAApB;AACA,IAAMC,kBAAkB,GAAGD,OAAO,CAAC;AAAA,SACjC,SAAQE,OAAR,CAAgBC,OAAO,CAAC,kBAAD,CAAP,CAA4BC,WAA5C,CADiC;AAAA,CAAD,KAAlC;AAGA,SAASC,IAAT,EAAeC,MAAf,EAAsBC,SAAtB,EAAiCC,IAAjC,QAA8C,kBAA9C;AAEA,IAAMC,gBAAgB,GAAGT,OAAO,CAAC;AAAA,SAAK,OAAO,yBAAP,CAAL;AAAA,CAAD,EAAyC;AAAEU,EAAAA,GAAG,EAAE,KAAP;AAAA;AAAA;AAAA,kCAA5B,yBAA4B;AAAA;AAAA,cAA5B,yBAA4B;AAAA;AAAA,CAAzC,CAAhC;;AAEA,IAAMC,aAAa,GAAGR,OAAO,CAAC,gBAAD,CAA7B;;AAOA,SAAUS,GAAV,EAAeC,GAAf,QAA0B,MAA1B;AAGA,IAAMC,OAAO,GAAG,CACd;AAACC,EAAAA,KAAK,EAAE,MAAR;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CADc,EAEd;AAACD,EAAAA,KAAK,EAAE,KAAR;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAFc,EAGd;AAACD,EAAAA,KAAK,EAAE,KAAR;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAHc,CAAhB;;IAMqBC,M;;;;;;;;;;;;;;;;;;4DACd;AACLC,MAAAA,MAAM,EAAE,EADH;AAELC,MAAAA,IAAI,EAAE,EAFD;AAGLC,MAAAA,QAAQ,EAAE,EAHL;AAILC,MAAAA,MAAM,EAAE,KAJH;AAKLC,MAAAA,MAAM,EAAE;AALH,K;;mEAQQ,UAACC,QAAD,EAAc;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,YAAKG,QAAL,CAAc;AAACL,QAAAA,MAAM,EAAEE;AAAT,OAAd;AACD,K;;;;;;;6BAGa;AAAA;;AACN,aACD,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACP,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEU,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,KAAK,EAAC,uBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,SAAD;AACF,QAAA,KAAK,EAAC,UADJ;AAEF,QAAA,IAAI,EAAC,MAFH;AAGF,QAAA,MAAM,wBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAMJ;AAAG,QAAA,KAAK,EAAE;AAACI,UAAAA,SAAS,EAAE;AAAZ,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANI,EAOH,oBAAC,MAAD;AACC,QAAA,KAAK,EAAC,YADP;AAEC,QAAA,OAAO,EAAEb,OAFV;AAGC,QAAA,QAAQ,EAAE,KAAKc,YAHhB;AAIC,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWR,MAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPG,EAaE;AAAG,QAAA,KAAK,EAAE;AAACM,UAAAA,SAAS,EAAE;AAAZ,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,EAcE,oBAAC,SAAD;AACJ,QAAA,KAAK,EAAC,YADF;AAEJ,QAAA,IAAI,EAAC,QAFD;AAGJ,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWP,MAHd;AAIJ,QAAA,QAAQ,EAAE,kBAACQ,IAAD;AAAA,iBAAS,MAAI,CAACJ,QAAL,CAAc;AAAEJ,YAAAA,MAAM,EAAEQ;AAAV,WAAd,CAAT;AAAA,SAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,EAoBQ;AAAG,QAAA,KAAK,EAAE;AAACH,UAAAA,SAAS,EAAE;AAAZ,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApBR,EAsBE,oBAAC,gBAAD;AAAkB,QAAA,GAAG,EAAC,YAAtB;AAAmC,QAAA,KAAK,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtBF,CAFA,CAFV,EAgCU,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,MAAM,EAAE,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEV,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,aAAD;AAAe,QAAA,MAAM,EAAE,KAAKE,KAAL,CAAWX,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAFU,CAhCV,CAHA,CADO,CADC;AAmDH;;;;EAnE+Ba,KAAK,CAACC,S;;SAArBf,M","sourcesContent":["'use strict'\nimport 'antd/dist/antd.css'; \nimport '@shopify/polaris/styles.css'\nimport dynamic from 'next/dynamic'\nconst AppProviderDynamic = dynamic(() =>\n  Promise.resolve(require('@shopify/polaris').AppProvider)\n)\nimport { Page, Select,TextField, Card  } from \"@shopify/polaris\";\n\nconst DynamicAceEditor = dynamic(()=> import(\"../components/aceEditor\"), { ssr: false })\n\nconst ReactMarkdown = require('react-markdown')\n\n\n\n\n\n\nimport {  Row, Col } from \"antd\";\n\n\nconst options = [\n  {label: 'POST', value: 'post'},\n  {label: 'GET', value: 'get'},\n  {label: 'PUT', value: 'put'},\n];\n\nexport default class Mocker extends React.Component{\nstate ={\n  output: \"\",\n  body: \"\",\n  endpoint: \"\",\n  method: \"get\",\n  status: 200\n}\n\nhandleChange = (newValue) => {\n  console.log(newValue)\n  this.setState({method: newValue});\n};\n\n\n    render () {\n        return (\n       <AppProviderDynamic>\n<Page fullWidth>\n  \n\n<Row>\n\n          <Col lg={12}>\n\n          <Card sectioned title=\"Add new mock endpoint\">\n          <TextField\n        label=\"Endpoint\"\n        type=\"text\"\n        prefix={`window.location.href`}\n      />\n      <p style={{marginTop: 20}}></p>\n       <Select\n        label=\"Date range\"\n        options={options}\n        onChange={this.handleChange}\n        value={this.state.method}\n      />\n            <p style={{marginTop: 20}}></p>\n            <TextField\n        label=\"StatusCode\"\n        type=\"number\"\n        value={this.state.status}\n        onChange={(text)=> this.setState({ status: text })}\n      />\n                  <p style={{marginTop: 20}}></p>\n\n            <DynamicAceEditor lan='javascript' theme=\"github\"/>\n\n          </Card>\n     \n          </Col>\n\n          <Col lg={11} offset={1}>\n\n<Card sectioned>\n<ReactMarkdown source={this.state.output} />\n</Card>\n\n</Col>\n         </Row>\n\n\n</Page>\n\n       </AppProviderDynamic> \n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}